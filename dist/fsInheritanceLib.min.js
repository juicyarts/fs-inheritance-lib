function findSingleFile(e,i){try{var r={};!e.inheritFrom||e.inheritFrom.length<=0?e.inheritFrom=["./"]:e.inheritFrom.indexOf("./")<0&&e.inheritFrom.unshift("./");for(var n=0;n<e.inheritFrom.length;n++){var t=path.join(e.inheritFrom[n],e.root,i);if(fs.existsSync(t))return r={origin:"./"===e.inheritFrom[n]?"local":e.inheritFrom[n].replace(/^(((\.){1,2}\/){1,})/,""),path:t},e.loglevel&&e.loglevel.indexOf("info")>-1&&console.info(path.join(e.root,i)+" found in: "+e.inheritFrom[n]),r;e.loglevel&&e.loglevel.indexOf("warn")>-1&&console.warn(path.join(e.root,i)+" doesn't exist in: "+e.inheritFrom[n])}}catch(e){console.error(e)}}function findSinglePath(e,i){try{for(var r=[],n=0;n<e.inheritFrom.length;n++){var t=path.join(e.inheritFrom[n],e.root?e.root:"",i);fs.existsSync(t)?(e.loglevel&&e.loglevel.indexOf("info")>-1&&console.info(path.join(e.root?e.root:"",i)+" found in: "+e.inheritFrom[n]),r.push(t)):e.loglevel&&e.loglevel.indexOf("warn")>-1&&console.warn(path.join(e.root?e.root:"",i)+" doesn't exist in: "+e.inheritFrom[n])}return r}catch(e){console.error(e)}}function findFiles(e,i){for(var r=!1,n=[],t=0;t<i.length;t++)if(e.getFileByRegEx||i[t].match(/\*/)){var o=findGlobPatterns(e,i[t]);n=0===n.length?o:n.concat(o)}else r=void 0!==e.removePatternFromFileName&&findSingleFile(e,i[t]).path.match(e.removePatternFromFileName)?!!findSingleFile(e,i[t])&&findSingleFile(e,i[t]).path.replace(e.removePatternFromFileName,""):!!findSingleFile(e,i[t])&&findSingleFile(e,i[t]).path,r&&(e.removePath&&(r=r.split("/").pop()),n.push(r));return n=removeDuplicates(n)}function findPaths(e,i){for(var r="",n=[],t=0;t<i.length;t++)i[t].match(/\*/)?n=findGlobPath(e,i[t]):(r=findSinglePath(e,i[t]),n=n.concat(r));return n}function findGlobPatterns(e,i){var r,n=[],t=new RegExp("(.+?)?("+e.root+")(/)?");!e.inheritFrom||e.inheritFrom.length<=0?e.inheritFrom=["./"]:e.inheritFrom.indexOf("./")<0&&e.inheritFrom.unshift("./");for(var o=0;o<e.inheritFrom.length;o++){e.getFileByRegEx?(r=glob.sync(path.join(e.inheritFrom[o],e.root,"**/*.*")),r=filterRegex(r,i)):r=glob.sync(path.join(e.inheritFrom[o],e.root,i));for(var l=0;l<r.length;l++){var a=r[l].replace(t,"");a=findSingleFile(e,a).path.match(e.removePatternFromFileName)?findSingleFile(e,a).path.replace(e.removePatternFromFileName,""):findSingleFile(e,a).path,e.removePath&&(a=a.split("/").pop()),n.push(a)}}return removeDuplicates(n)}function findGlobPath(e,i){for(var r,n,t=[],o=0;o<e.inheritFrom.length;o++){n=glob.sync(path.join(e.inheritFrom[o],e.root,i));for(var l=0;l<n.length;l++){var a=n[l].split("/").pop();r=findSinglePath(e,a),t=t.concat(r)}}return removeDuplicates(t)}function removeDuplicates(e){var i=new Set(e),r=i.values();return Array.from(r)}function filterRegex(e,i){var r=e.filter(function(e){return i.test(e)});return r}function writeAssetLibrary(e,i,r){var n=JSON.stringify(e);try{fs.writeFileSync(path.join(r,i),n)}catch(e){console.error(e)}}function mkLib(e,i){var r=findFiles(e,e.files);writeAssetLibrary(r,e.outputName,e.outputPath),i&&i(r)}var fs=require("fs"),path=require("path"),glob=require("glob");module.exports={findSingleFile:findSingleFile,findSinglePath:findSinglePath,findFiles:findFiles,findPaths:findPaths,findGlobPatterns:findGlobPatterns,findGlobPath:findGlobPath,writeAssetLibrary:writeAssetLibrary,mkLib:mkLib};
//# sourceMappingURL=dist/fsInheritanceLib.min.js.map