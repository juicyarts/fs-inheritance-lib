function findSingleFile(e,r){if(!e.inheritFrom||e.inheritFrom.length<=0)throw new ReferenceError("No paths given to inherit from given");for(var i=0;i<e.inheritFrom.length;i++){var t=path.join(e.inheritFrom[i],e.root,r);{if(fs.existsSync(t))return t;log(e,"warn",r,"doesnt exist in",e.root,"of",e.inheritFrom[i])}}}function findSinglePath(e,r){if(!e.inheritFrom||e.inheritFrom.length<=0)throw new ReferenceError("No paths given to inherit from given");for(var i=[],t=0;t<e.inheritFrom.length;t++){var n=path.join(e.inheritFrom[t],e.root?e.root:"",r);fs.existsSync(n)?i.push(n):log(e,"warn",r+" doesnt exist in: "+e.root+"of"+e.inheritFrom[t])}return i}function findFiles(e,r){for(var i,t=!1,n=[],o=0;o<r.length;o++)e.getFileByRegEx||r[o].match(/\*/)?(i=findGlobPatterns(e,r[o]),n=n.concat(i)):(t=findSingleFile(e,r[o]),e.removePatternFromFileName&&(t=t.replace(e.removePatternFromFileName,"")),e.removePath&&(t=t.split("/").pop()),n.push(t));return removeDuplicates(n)}function findPaths(e,r){for(var i="",t=[],n=0;n<r.length;n++)r[n].match(/\*/)?t=findGlobPath(e,r[n]):(i=findSinglePath(e,r[n]),t=t.concat(i));return t}function findGlobPatterns(e,r){for(var i,t,n=[],o=new RegExp("(.+?)?("+e.root+")(/)?"),l=0;l<e.inheritFrom.length;l++){e.getFileByRegEx?(i=glob.sync(path.join(e.inheritFrom[l],e.root,"**/*.*")),i=filterRegex(i,r)):i=glob.sync(path.join(e.inheritFrom[l],e.root,r));for(var a=0;a<i.length;a++)t=i[a].replace(o,""),t=findSingleFile(e,t).replace(e.removePatternFromFileName,""),e.removePath&&(t=t.split("/").pop()),n.push(t)}return removeDuplicates(n)}function findGlobPath(e,r){for(var i,t,n=[],o=0;o<e.inheritFrom.length;o++){t=glob.sync(path.join(e.inheritFrom[o],e.root,r));for(var l=0;l<t.length;l++){var a=t[l].split("/").pop();i=findSinglePath(e,a),n=n.concat(i)}}return removeDuplicates(n)}function removeDuplicates(e){if(e.length<=1)return e;var r=new Set(e),i=r.values();return Array.from(i)}function filterRegex(e,r){var i=e.filter(function(e){return r.test(e)});return i}function writeAssetLibrary(e,r,i){var t=JSON.stringify(e);try{fs.writeFileSync(path.join(i,r),t)}catch(e){log(!1,"error",e)}}function mkLib(e,r){var i=findFiles(e,e.files);if(writeAssetLibrary(i,e.outputName,e.outputPath),r)return r(i)}function log(e,r,i){e.loglevel&&e.loglevel.indexOf(r)>-1&&console[r](i)}var fs=require("fs"),path=require("path"),glob=require("glob");module.exports={findSingleFile:findSingleFile,findSinglePath:findSinglePath,findFiles:findFiles,findPaths:findPaths,findGlobPatterns:findGlobPatterns,findGlobPath:findGlobPath,writeAssetLibrary:writeAssetLibrary,mkLib:mkLib};
//# sourceMappingURL=dist/fsInheritanceLib.min.js.map